# gifsicle
# Autogenerated from man page /data/data/com.termux/files/usr/share/man/man1/gifsicle.1.gz
complete -c gifsicle -l merge -s m -d '\' Combine all GIF inputs into one file with multiple frames and write that fi…'
complete -c gifsicle -l batch -s b -d '\' Modify each GIF input in place by reading and writing to the same filename'
complete -c gifsicle -l explode -s e -d '\' Create an output GIF for each frame of each input file'
complete -c gifsicle -l explode-by-name -s E -d '\' Same as . Op --explode "," but write any named frames to files \\(oqxxx'
complete -c gifsicle -l info -s I -d '\' Print a human-readable description of each input GIF to the standard output…'
complete -c gifsicle -l color-info -l cinfo -d '\' Like '
complete -c gifsicle -l extension-info -l xinfo -d '\' Like '
complete -c gifsicle -l size-info -l sinfo -d '\' Like '
complete -c gifsicle -l help -s h -d '\' Print usage information and exit.  \' . Sp'
complete -c gifsicle -l output -d '\' Send output to R file '
complete -c gifsicle -l verbose -s V -d '\' Print progress information (files read and written) to standard error.  \' '
complete -c gifsicle -l no-warnings -s w -d '\' Suppress all warning messages.  \' . Sp'
complete -c gifsicle -l no-ignore-errors -d '\' Exit with status 1 when encountering a very erroneous GIF'
complete -c gifsicle -l version -d '\' Print the version number and some short non-warranty information and exit'
complete -c gifsicle -l careful -d '\' Write slightly larger GIFs that avoid bugs in some other GIF implementations'
complete -c gifsicle -l conserve-memory -d '\' Conserve memory usage at the expense of processing time'
complete -c gifsicle -l nextfile -d '\' Allow input files to contain multiple concatenated GIF images'
complete -c gifsicle -l multifile -d '\' Like '
complete -c gifsicle -l delete -d '\' Delete  frames from the input GIF.  \''
complete -c gifsicle -l insert-before -d '\' Insert  other-GIFs before  frame in the input GIF.  \''
complete -c gifsicle -l append -d '\' Append  other-GIFs to the input GIF.  \''
complete -c gifsicle -l replace -d '\' Replace  frames from the input GIF with R other-GIFs .  \''
complete -c gifsicle -l done -d '\' Complete the current set of frame changes.  \' '
complete -c gifsicle -l background -d '\' Set the output GIF\'s background to R color '
complete -c gifsicle -l crop -d '\' Crop the following input frames to a smaller rectangular area'
complete -c gifsicle -l crop-transparency -d '\' Crop any transparent borders off the following input frames'
complete -c gifsicle -l flip-vertical -d '\' Flip the following frames horizontally or vertically.  \' . Sp'
complete -c gifsicle -l interlace -d '\' Turn interlacing on.  \' . Sp'
complete -c gifsicle -l logical-screen -d '\' Set the output logical screen to R width x height '
complete -c gifsicle -l position -d '\' Set the following frames\' positions to . RI ( x , y )'
complete -c gifsicle -l rotate-270 -d '\' Rotate the following frames by 90, 180, or 270 degrees'
complete -c gifsicle -l transparent -d '\' Make  color transparent in the following frames'
complete -c gifsicle -l app-extension -d '\' Add an application extension named  app-name and with the value  extension …'
complete -c gifsicle -l comment -d '\' Add a comment, R text , to the output GIF'
complete -c gifsicle -l extension -d '\' Add an extension numbered  number and with the value  extension to the outp…'
complete -c gifsicle -l name -d '\' Set the next frame\'s name to R text '
complete -c gifsicle -l delay -d '\' Set the delay between frames to R time in hundredths of a second.  \' . Sp'
complete -c gifsicle -l disposal -d '\' Set the disposal method for the following frames to R method '
complete -c gifsicle -l loopcount -d '\' Set the Netscape loop extension to R count '
complete -c gifsicle -l optimize -d '\' Attempt to shrink the file sizes of GIF animations'
complete -c gifsicle -o O1 -d 'Store only the changed portion of each image.  This is the default'
complete -c gifsicle -o O2 -d 'Store only the changed portion of each image, and use transparency'
complete -c gifsicle -o O3 -d 'Try several optimization methods (usually slower, sometimes better results)'
complete -c gifsicle -o Okeep-empty -d 'Preserve empty transparent frames (they are dropped by default). Sp '
complete -c gifsicle -l unoptimize -d '\' Unoptimize GIF animations into an easy-to-edit form'
complete -c gifsicle -l resize -d '\' Resize the output GIF to the given R width " and " height '
complete -c gifsicle -l resize-height -d '\' Resize to a given width or height, preserving aspect ratio.  Equivalent to '
complete -c gifsicle -l resize-touch -d '\' Resize the output GIF to fit within a rectangle with dimensions R width x h…'
complete -c gifsicle -l resize-touch-height -d '\' Like . Oa --resize-fit and '
complete -c gifsicle -l scale -d '\' Scale the output GIF\'s width and height by R Xfactor " and " Yfactor '
complete -c gifsicle -l resize-method -d '\' Set the method used to resize images'
complete -c gifsicle -l resize-colors -d '\' Allow Gifsicle to add intermediate colors when resizing images'
complete -c gifsicle -l colors -d '\' Reduce the number of distinct colors in each output GIF to  num or less'
complete -c gifsicle -l color-method -d '\' Determine how a smaller colormap is chosen'
complete -c gifsicle -l dither -d '\' When '
complete -c gifsicle -l gamma -d '\' Set the gamma correction to R gamma , which can be a real number or '
complete -c gifsicle -l lossy -d '\' Alter image colors to shrink output file size at the cost of artifacts and …'
complete -c gifsicle -l change-color -d '\' Change  color1 to  color2 in the following input GIFs'
complete -c gifsicle -l transform-colormap -d '\'  Command should be a shell command that reads from standard input and write…'
complete -c gifsicle -o d10 -o d20 -o d30 -d 'GIF images, in sequence, to gifsicle\'s standard input.  Like'

